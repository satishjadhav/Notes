https://javarevisited.blogspot.com/2011/09/spring-interview-questions-answers-j2ee.html
-----------------------------------------------------------------------------------------------------------------------------
1) What is Spring IOC Container ?
2) Does Singleton from Spring Container is thread safe?
3) Why Spring MVC is better than Struts?
4) What is Spring Integration?
5) How to call remote method by RMI using Spring
6) What scheduling feature Spring framework provides?
7) How do you make a Singleton bean to lazy load in ApplicationContext which loads all Singleton beans eagerly during startup?
8) Does Spring Security part of Spring framework?
9) How to configure Spring using Annotation
10) Which version of Spring have you used recently and what is difference you observed from previous spring version. 
-----------------------------------------------------------------------------------------------------------------------------
https://javarevisited.blogspot.com/2011/09/spring-interview-questions-answers-j2ee.html
-Spring IOC and Spring MVC framwork used as de-facto framework for all new java development.
-Spring MVC can be used to develop both standalone Java web application as well as RESTful Web Services using Spring.
-Inversion of control means now we have inverted the control of creating the object from our own using new opreator to container or framework.Its responsibilty of container to create an object as required.
-If the bean implements the BeanNameAware interface, the factory calls setBeanName() passing the bean’s ID.
-Spring Bean Life Cycle:
	-If the bean implements the "BeanNameAware" interface, the factory calls setBeanName() passing the bean’s ID.
	-If the bean implements the "BeanFactoryAware" interface, the factory calls setBeanFactory(), passing an instance of itself.
	- If there are any "BeanPostProcessors" associated with the bean, their post- ProcessBeforeInitialization() methods will be called before the properties for the Bean are set.
	-If an init() method is specified for the bean, it will be called.
	-If the Bean class implements the DisposableBean interface, then the method destroy() will be called when the Application no longer needs the bean reference.
	-If the Bean definition in the Configuration file contains a 'destroy-method' attribute, then the corresponding method definition in the Bean class will be called.
-What is Bean Factory, have you used XMLBeanFactory:
	-BeanFactory is factory Pattern which is based on IOC design principles it is used to make a clear separation between application configuaration and dependency from actual code.
	-XmlBeanFactory is one of the implementations of Bean Factory which we have used in our project.
	-The org.springframework.beans.factory.xml.XmlBeanFactory is used to create bean instance defined in our XML file.
	-BeanFactory factory  = new XmlBeanFactory(new FileInputStream("beans.xml"));
	-ClassPathResources resorce = new ClassPathResource("beans.xml");
	 XmlBeanFactory factory = new XmlBeanFactory(resource);
-ApplicationContext:
	-Here we can have more than one config files possible
	-Application contexts can publish events to beans that are registered as listeners
	-Support internationalization (I18N) messages
	-Support application life-cycle events, and validation.
	-Supports many enterprise services such as JNDI access, EJB integration, remoting
What is the difference between @Controller and @RestController in Spring MVC
	-Even though both are used to indicate that a Spring bean is a Controller in Spring MVC setup, @RestController is better when you are developing RESTful web services using Spring MVC framework. 
	-It's a combination of @Controller + @ResponseBody annotation which allows the controller to directly write the response and bypassing the view resolution process, which is not required for RESTful web service.
	-It also instructs DispatcherServlet to use different HttpMessageConverters to represent the response in the format client is expecting e.g. HttpMessageJackson2Convert to represent response in JSON format and JAXB based message converts to generate XML response.
What is the difference between a singleton and prototype bean
	-Singleton: means single bean definition to a single object instance per Spring IOC container.
	-Prototype: means a single bean definition to any number of object instances.Whatever beans we defined in spring framework are singleton beans.
	-There is an attribute in bean tag named ‘singleton’ if specified true then bean becomes singleton and if set to false then the bean becomes a prototype bean.  By default, it is set to true. So, all the beans in spring framework are by default singleton beans.
What is the role of DispatcherServlet in Spring MVC
	-The DispatcherServlet is very important from Spring MVC perspective, it acts as a FrontController i.e. all requests pass through it.Its responsible for routing the request to the controller and view resolution before sending the response to the client.
	-When Controller returns a Model or View object, it consults all the view resolvers registered to find the correct type of ViewResolver which can render the response for clients.
	-In case of RESTful Web Services, the DispatcherServlet is also responsible for using HttpMessageConverter to represent the response in the JSON, XML, or TEXT format, depending on the content negotiation between Client and Server e.g. if client send request with HTTP accept header as "application/json" then DispatcherServlet will ask the HttpMessageJackson2Converter to convert the response into JSON format.
What is AOP
	-The core construct of AOP is the aspect, which encapsulates behaviors affecting multiple classes into reusable modules. AOP is a programming technique that allows a developer to modularize crosscutting concerns,  that cuts across the typical divisions of responsibility, such as logging and transaction management. 
	-Spring AOP, aspects are implemented using regular classes or regular classes annotated with the @Aspect annotation.
Explain Advice
	Its an implementation of aspect advice is inserted into an application at jion points.Different types of advice include "around","before" and "after" advice.
What are the joint Point and point cut
	-This is not really a spring interview questions I would say an AOP one.  Similar to Object-oriented programming, AOP is another popular programming concept which complements OOPS. A join point is an opportunity within the code for which we can apply an aspect. In Spring AOP, a join point always represents a method execution.
	-Pointcut: a predicate that matches join points. A pointcut is something that defines what join-points an advice should be applied.
Difference between the setter and constructor injection in Spring
	Setter injection is more flexible than constructor injection because you must remember the type and order of constructor parameter. Also, constructor injection is generally used to inject the mandatory dependency, while setter can be used to inject optional dependency.

