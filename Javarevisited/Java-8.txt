
https://www.java67.com/2017/08/difference-between-abstract-class-and-interface-in-java8.html
-Java 8 now allows you to add non-abstract method implementations to interfaces by utilizing the default and static keyword.
-Defender methods are introduced to maintain backword compatibility and same time making Collection API more suitable to be used inside key Java 8 features like lambda expresssions.
-The key difference is that abstract class can maintain tha state but the inerface cannot,an abstract class can have constructor which is not allowed inside interface even in java 8.If you are designing API then use interface and if you are abstracting both state and behavior then use an abstract class.
-Interface was the purest form of abstraction which only defines what interface is supposed to do without specifying how they should implemented,in other words, it only declares API methods and leaves implementations to its subclasses.
-Default or defender methods are introduced to maintain backword compatibility and same time making Collcection API more suitable to be used inside key Java 8 features like lambada expressions.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-